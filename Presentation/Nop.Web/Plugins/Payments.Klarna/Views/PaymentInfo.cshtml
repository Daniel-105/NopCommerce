@using Nop.Web.Framework.UI;
@model Nop.Web.Models.ShoppingCart.ShoppingCartModel

@{
    Layout = "";
    //Html.AddScriptParts(ResourceLocation.Footer, Nop.Plugin.Payments.Qualpay.QualpayDefaults.EmbeddedFieldsScriptPath, excludeFromBundle: true);
    //Html.AddCssFileParts(Nop.Plugin.Payments.Qualpay.QualpayDefaults.EmbeddedFieldsStylePath, excludeFromBundle: true);

    @inject INopHtmlHelper NopHtml

    NopHtml.AppendPageCssClassParts("html-shopping-cart-page");
}

<style>
    .klarnaBtn {
        width: 500px;
        height: 50px;
        margin: auto;
        cursor: pointer;
        background-color: #c98f8b;
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 10px;
        font-weight: 700;
        font-size: 20px;
    }
</style>


<div id="klarna_container" style="width: 500px; margin: auto;"></div>

<div style="width: 500px; margin: 20px auto ;">
    <!--Button to trigger authorize call-->
    <div id="klarnaRequest" class="klarnaBtn">Klarna Payment</div>
</div>

<table class="cart">
    <colgroup>
        <col width="1">
        <col width="1">
        <col>
        <col width="1">
        <col width="1">
        <col width="1">
    </colgroup>
    <thead style="display: flex;">
        <tr style="font-size: inherit;">
            <th class="sku">
                SKU
            </th>
            <th class="product-picture">
                Image
            </th>
            <th class="product">
                Product(s)
            </th>
            <th class="unit-price">
                Price
            </th>
            <th class="quantity">
                Qty.
            </th>
            <th class="subtotal">
                Total
            </th>
        </tr>
    </thead>
    <tbody style="border:1px solid black;">
        @foreach (var item in Model.Items)
        {
            <tr style="display:flex;">

                <td class="sku" style="border-style:none;">
                    <label class="td-title">SKU:</label>
                    <span class="sku-number">@item.ProductId</span>
                </td>
                <td style="border-style:none;" class="product-picture">
                    <img alt="Picture of Ardidas" src="@item.Picture.ImageUrl" title="Show details for Ardidas">
                </td>
                <td  style="border-style:none;"class="product">
                    <a href="/ardidas" class="product-name">Ardidas</a>
                </td>
                <td style="border-style:none;" class="unit-price">
                    <label class="td-title">Price:</label>
                    <span class="product-unit-price">$10.00</span>
                </td>
                <td  style="border-style:none;" class="quantity">
                    <label class="td-title" for="itemquantity52">Qty.:</label>
                    <span class="product-quantity">1</span>
                </td>
                <td style="border-style:none;" class="subtotal">
                    <label class="td-title">Total:</label>
                    <span class="product-subtotal">$10.00</span>
                </td>
            </tr>


        }
        <tr>
            <td style="display:;" class="sku">
                <label class="td-title">SKU:</label>
                <span class="sku-number"></span>
            </td>
            <td style="display:;" class="product-picture">
                <a href="/nike"><img alt="Picture of Nike" src="https://localhost:5001/images/thumbs/0000004_nike_80.jpeg" title="Show details for Nike"></a>
            </td>
            <td style="display:;" class="product">
                <a href="/nike" class="product-name">Nike</a>
            </td>
            <td style="display:;" class="unit-price">
                <label class="td-title">Price:</label>
                <span class="product-unit-price">$20.00</span>
            </td>
            <td style="display:;" class="quantity">
                <label class="td-title" for="itemquantity53">Qty.:</label>
                <span class="product-quantity">1</span>
            </td>
            <td style="display:;" class="subtotal">
                <label class="td-title">Total:</label>
                <span class="product-subtotal">$20.00</span>
            </td>
        </tr>
    </tbody>
</table>



<!script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></!script>
<!script type="text/javascript" src="//x.klarnacdn.net/kp/lib/v1/api.js" async></!script>

@*<div>@Model.Items.Count</div>
@foreach (var item in Model.Items)
{
    <div>@item.SubTotal</div>
    <div>@item.Quantity</div>
    <div>@item.ProductName</div>
         <div>@item.Sku</div>

    <div>id: @item.ProductId</div>
}
*@
<script type="text/javascript">

    let klarnaRequest = document.querySelector("#klarnaRequest");
    let authorizationToken = "";
    let jsonDataResponse = "";
    let modelItems = @Html.Raw(Json.Serialize(Model.Items));
    let jsonDataC = "";
    let jsonStringData = "";

    $(document).ready(function () {
        $('.payment-info-next-step-button').hide();
    });

    $(document).on('accordion_section_opened', function (data) {
        if (data.currentSectionId != 'opc-payment_info') {
            $('.payment-info-next-step-button').show();
        }
    });


    /*The following is the authorize function, which triggers Klarna to perform a risk assessment of the purchase
    The successful response of this risk assessment is an authorization token, which in this example is logged in the console*/
    // let jsonRequest = `{
    //     "purchase_country": "PT",
    //     "purchase_currency": "EUR",
    //     "locale": "pt-PT",
    //     "order_amount": 20000,
    //     "order_tax_amount": 0,
    //     "order_lines": [{
    //         "type": "physical",
    //         "reference": "19-402",
    //         "name": "black T-Shirt",
    //         "quantity": 2,
    //         "unit_price": 5000,
    //         "tax_rate": 0,
    //         "total_amount": 10000,
    //         "total_discount_amount": 0,
    //         "total_tax_amount": 0
    //     },
    //     {
    //         "type": "physical",
    //         "reference": "123123",
    //         "name": "red trousers",
    //         "quantity": 1,
    //         "unit_price": 10000,
    //         "tax_rate": 0,
    //         "total_amount": 10000,
    //         "total_discount_amount": 0,
    //         "total_tax_amount": 0
    //     }]
    // }`;

    // console.log(modelItems);
    // for (let i = 0; i < modelItems.length; i++) {
    //     console.log(modelItems[i].ProductName);
    // }

    $(document).ready(function () {
        console.log("You clicked the button");
        $.ajax({
            type: "POST",
            url: "/GetClientToken",
            success: function (data) {
                dataResponse = JSON.parse(data.ResponseContent);
                jsonDataC = JSON.parse(data.jsonData);
                jsonStringData = data.jsonData;
                let client_token = dataResponse.client_token;
                let identifier = dataResponse.payment_method_categories[0].identifier;
                console.log(dataResponse);
                console.log(jsonDataC);
                console.log(client_token);
                console.log(identifier);
                // console.log(jsonDataResponse);
                createSession(client_token, identifier);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.error("An error occurred:", errorThrown);
            }
        });
    });


    function createSession(client_token, identifier) {
        //The following method initializes the Klarna Payments JS library
        klarnaAsyncCallback = function () {
            Klarna.Payments.init({
                client_token: client_token
            });
            console.log("Payments initialized");
            //The following method loads the payment_method_category in the container with the id of 'klarna_container'
            Klarna.Payments.load({
                container: '#klarna_container',
                payment_method_category: identifier

            },
                function (res) {
                    console.log("Load function called")
                    console.debug(res);
                    jsonDataResponse = res;
                });
        };
        klarnaAsyncCallback();
    }


    console.log(`jsonData: ${jsonDataC}`);


    klarnaRequest.addEventListener("click", () => {

        Klarna.Payments.authorize({
            payment_method_category: 'pay_later'
        }, jsonStringData,
            function (res) {
                console.log("Response from the authorize call:");
                console.log(res);
                authorizationToken = res["authorization_token"];
                //authorizationToken = { "authorizationToken": res["authorization_token"] }
                console.log(authorizationToken);
                //let authorizationToken = res["authorization_token"];
                //console.log(`${authorizationToken} is of type ${typeof authorizationToken}`)
                //placeOrderButton.style.display = "block";
                if (authorizationToken) {
                    confirm();
                } else {
                    alert("Sorry there was a problem with the payment");
                    window.location = "/";
                }
            })
    });

    function confirm() {
        console.log(authorizationToken);
        let data = { "authorizationToken": authorizationToken }
        $.ajax({
            type: "POST",
            url: "/PlaceOrder",
            data: data,
            dataType: "text",
            success: function (response) {
                let parsedReponse = JSON.parse(JSON.parse(response));
                console.log(response);

                console.log(typeof parsedReponse);
                console.log(parsedReponse.fraud_status);
                if (parsedReponse.fraud_status == "ACCEPTED") {
                    // Swal.fire({
                    //     icon: 'success',
                    //     title: 'Your payment has been correctly processed',
                    //     showConfirmButton: false,
                    // });
                    sendToPaymentProcessor();

                    // document.querySelector("button").click();

                    // window.location.href = @Url.Action("ProcessPaymentAsync" , "KlarnaPayment");
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong!',
                    })
                    // window.location.href = "/checkout/completed";
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.error("An error occurred:", errorThrown);
            }
        });

    }

    //TODO verificar valor recaptcha
    function sendToPaymentProcessor() {
        var url = "@Url.Action("Confirm", "Checkout")";
        $.ajax({
            type: "POST",
            data: {
                captchaValid: true,
                existValid: "false"
            },
            url: url,
            success: function (response) {
                // alert("sucess");
                window.location.href = "/checkout/completed";
            }
        })
    }
</script>
